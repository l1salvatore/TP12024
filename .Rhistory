library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica2024/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos
datos_Provincia_Agua_Table <- datos_base |>
select('Provincia', 'FormaObtencionAgua')
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50",  "...56", "...57", "...58", "...59", "...60", "...111", "...112", "...113"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica", # Cualitativa Nominal
"TipoDeInternetEnElHogar", # Cualitativa Nominal
"HayAlMenosUnCelularConInternet",# Cualitativa Nominal
"N_Abonos", # Cuantitativa Discreta
"N_Computadoras", # Cuantitativa Discreta
"N_Celulares", # Cuantitativa Discreta
"FrecuenciaTransporteColectivo", # Cualitativa Ordinal
"FrecuenciaDisparDiaNoche",  # Cualitativa Dicotómica
"AccesoBicicleta")# Cualitativa Ordinal
datos <- data.frame(datos)
datos_base <- datos |>
mutate(
PoseeGasNaturalParaCocina = ifelse(PoseeGasNaturalParaCocina == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCocina), 1, 0),
PoseeGarrafaParaCocina = ifelse(PoseeGarrafaParaCocina == 'Gas natural (red de gas)'& !is.na(PoseeGarrafaParaCocina), 1, 0),
ElectricidadParaCocina = ifelse(ElectricidadParaCocina == 'Electricidad'& !is.na(ElectricidadParaCocina), 1, 0),
PoseeLeñaCarbonParaCocina = ifelse(PoseeLeñaCarbonParaCocina == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCocina), 1, 0),
NoTieneParaCocina = ifelse(NoTieneParaCocina == 'No tengo para cocinar en mi vivienda' & !is.na(NoTieneParaCocina), 1, 0),
PoseeGasNaturalParaCalefaccion = ifelse(PoseeGasNaturalParaCalefaccion == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCalefaccion), 1, 0),
PoseeGarrafaParaCalefaccion = ifelse(PoseeGarrafaParaCalefaccion == 'Gas envasado (garrafa)'& !is.na(PoseeGarrafaParaCalefaccion), 1, 0),
ElectricidadParaCalefaccion = ifelse(ElectricidadParaCalefaccion == 'Electricidad'& !is.na(ElectricidadParaCalefaccion), 1, 0),
PoseeLeñaCarbonParaCalefaccion = ifelse(PoseeLeñaCarbonParaCalefaccion == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCalefaccion), 1, 0),
NoTieneParaCalefaccion = ifelse(NoTieneParaCalefaccion == 'No tengo para calefaccionar mi vivienda' & !is.na(NoTieneParaCalefaccion), 1, 0),
NoNecesitaCalefaccionar = ifelse(NoNecesitaCalefaccionar == 'No necesito calefaccionar mi vivienda en ninguna época del año' & !is.na(NoNecesitaCalefaccionar), 1, 0),
# Recodifico las etiquetas de una variable categórica
FormaObtencionAgua = recode(FormaObtencionAgua, "No sabe" = "No sabe",
"A través de una conexión con medidor a la red pública" = "Con medidor en red",
"A través de una conexión sin medidor, es decir “informalmente”, sea a través de una conexión directa a la red pública o a través de una conexión indirecta a través de un vecinx “informalmente”" = "Sin medidor, informalmente",
"A través de un camión cisterna" = "Camión cisterna",
"No poseo agua dentro de la vivienda y/o tengo que acarrear desde fuera del terreno en que se ubica mi vivienda"  = "No posee agua, consume agua externa",
"A través de un pozo" = "Agua de pozo",
"Conexión a un tanque comunitario" = "Tanque comunitario"),
TipoConexionElectrica = recode(TipoConexionElectrica, "Conexión a través de un medidor a la red eléctrica" = "Con medidor en red",
"Conexión sin medidor a una red eléctrica (“informal”)" = "Sin medidor, informalmente",
"Conexión a través de un medidor comunitario a la red eléctrica" = "Con medidor comunitario",
"No posee conexión a la red eléctrica en la vivienda" = "No tiene acceso a la red eléctrica"),
TipoDeInternetEnElHogar = recode(TipoDeInternetEnElHogar, "Si inálambrico/satelital" = "Inalámbrico/Satelital",
"No poseo internet de banda ancha" = "No posee",
"Si a través de cable (coaxial o ADSL)" = "Cableado (Coaxil/ADSL)",
"Si a través de fibra óptica" = "Fibra Optica",
"Sí pero no sé qué tipo de servicio tengo en mi vivienda"  = "No sabe"),
FrecuenciaTransporteColectivo = factor(FrecuenciaTransporteColectivo, levels = c("1 colectivo cada dos horas", "1 colectivo por hora", "1 colectivo cada 30 minutos", "Menos de 30 minutos entre cada colectivo")),
AccesoBicicleta = factor(AccesoBicicleta, levels = c("No", "Sí, pero están a más de 1 km de distancia", "Sí, a menos de 1 km")),
AccesoBicicleta = recode(AccesoBicicleta, "No" = "No tiene",
"Sí, pero están a más de 1 km de distancia" = "A más de 1km de distancia",
"Sí, a menos de 1 km" = "A menos de 1km de distancia"
)
)
#Buenos Aires         CABA        Chaco      Córdoba   Corrientes   Entre Ríos      Formosa        Jujuy     La Rioja      Mendoza     Misiones
#292          235           36           52           51           27           40           56           30           60          109
#Río Negro   Santa Cruz     Santa Fe     Santiago      Tucumán
#70           52           40           32           40
#Debido a que hay una tendencia favorable a Buenos Aires en cuanto a datos, se intenta filtrar y seleccionar el mínimo de hogares por cada provincia
#En este caso, nos adaptamos a Entre rios, que tiene 27 hogares consultados, entonces hacemos un sample de 27 hogares
filtered <- datos_base[sample( which (datos_base$Provincia == "Buenos Aires"), 27), ]
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "CABA"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Chaco"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Córdoba"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Corrientes"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Entre Ríos"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Formosa"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Jujuy"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "La Rioja"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Mendoza"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Misiones"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Río Negro"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Santa Cruz"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Santa Fe"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Santiago"), 27), ])
filtered <- rbind(filtered, datos_base[sample( which (datos_base$Provincia == "Tucumán"), 27), ])
datos_base <- filtered
#GRAFICOS
##########################################################
#SERVICIO DE AGUA#############################
##########################################################
#Tabla de distribución de frecuencias de la variable
#Provincia bajo la rla variable Forma Obtención
#Agua. En este caso, necesitamos ver las provincias las
#cuales tienen mayor número de hogares con servicio irregular
#de agua. Relación entre dos categóricas.
datos_Provincia_Agua_Table <- datos_base |>
select('Provincia', 'FormaObtencionAgua')
datos_Provincia_Agua_Table <- table(datos_Provincia_Agua_Table)
df_tabla <- as.data.frame(datos_Provincia_Agua_Table)
df_suma <- df_tabla %>%
group_by(FormaObtencionAgua) %>%
summarise(total = sum(Freq))
df_ordenado <- df_tabla %>%
left_join(df_suma, by = "FormaObtencionAgua") %>%
arrange(desc(total), FormaObtencionAgua, Provincia) %>%
select(-total)
df_ordenado$FormaObtencionAgua <- factor(df_ordenado$FormaObtencionAgua, levels = unique(df_ordenado$FormaObtencionAgua))
datos_Provincia_Agua_Table <- xtabs(Freq ~ Provincia + FormaObtencionAgua, data = df_ordenado)
datos_Provincia_Agua_Table <- addmargins(datos_Provincia_Agua_Table)
datos_Provincia_Agua_Table
# Gráfico de torta de la variable Se consume agua
# embotellada? bajo la restricción de la variable Forma de
# Obtención Agua. Se necesita ver si de los que consumen agua
# irregular, cuantos de estos hogares consumen agua
# embotellada aparte. Relación entre dos categóricas.
pie(table(datos_base$SeConsumeAguaEmbotellada))
datos_Provincia_Agua_Table <- datos_base |>
select('Provincia', 'FormaObtencionAgua')
pie(table(datos_base$SeConsumeAguaEmbotellada))
datos_base$SeConsumeAguaEmbotellada
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...25", "...26", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"AguaPotable", # Cualitativa Nominal
"PresionAgua", # Cualitativa Ordinal
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica", # Cualitativa Nominal
)
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...25", "...26", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"AguaPotable", # Cualitativa Nominal
"PresionAgua", # Cualitativa Ordinal
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica", # Cualitativa Nominal
)
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...25", "...26", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"AguaPotable", # Cualitativa Nominal
"PresionAgua", # Cualitativa Ordinal
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica" # Cualitativa Nominal
)
datos <- data.frame(datos)
datos_base <- datos |>
mutate(
AguaPotable = ifelse(AguaPotable == 'No' & !is.na(PoseeGasNaturalParaCocina), 'Si', 'No'),
PoseeGasNaturalParaCocina = ifelse(PoseeGasNaturalParaCocina == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCocina), 1, 0),
PoseeGarrafaParaCocina = ifelse(PoseeGarrafaParaCocina == 'Gas natural (red de gas)'& !is.na(PoseeGarrafaParaCocina), 1, 0),
ElectricidadParaCocina = ifelse(ElectricidadParaCocina == 'Electricidad'& !is.na(ElectricidadParaCocina), 1, 0),
PoseeLeñaCarbonParaCocina = ifelse(PoseeLeñaCarbonParaCocina == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCocina), 1, 0),
NoTieneParaCocina = ifelse(NoTieneParaCocina == 'No tengo para cocinar en mi vivienda' & !is.na(NoTieneParaCocina), 1, 0),
PoseeGasNaturalParaCalefaccion = ifelse(PoseeGasNaturalParaCalefaccion == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCalefaccion), 1, 0),
PoseeGarrafaParaCalefaccion = ifelse(PoseeGarrafaParaCalefaccion == 'Gas envasado (garrafa)'& !is.na(PoseeGarrafaParaCalefaccion), 1, 0),
ElectricidadParaCalefaccion = ifelse(ElectricidadParaCalefaccion == 'Electricidad'& !is.na(ElectricidadParaCalefaccion), 1, 0),
PoseeLeñaCarbonParaCalefaccion = ifelse(PoseeLeñaCarbonParaCalefaccion == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCalefaccion), 1, 0),
NoTieneParaCalefaccion = ifelse(NoTieneParaCalefaccion == 'No tengo para calefaccionar mi vivienda' & !is.na(NoTieneParaCalefaccion), 1, 0),
NoNecesitaCalefaccionar = ifelse(NoNecesitaCalefaccionar == 'No necesito calefaccionar mi vivienda en ninguna época del año' & !is.na(NoNecesitaCalefaccionar), 1, 0),
# Recodifico las etiquetas de una variable categórica
FormaObtencionAgua = recode(FormaObtencionAgua, "No sabe" = "No sabe",
"A través de una conexión con medidor a la red pública" = "Con medidor en red",
"A través de una conexión sin medidor, es decir “informalmente”, sea a través de una conexión directa a la red pública o a través de una conexión indirecta a través de un vecinx “informalmente”" = "Sin medidor, informalmente",
"A través de un camión cisterna" = "Camión cisterna",
"No poseo agua dentro de la vivienda y/o tengo que acarrear desde fuera del terreno en que se ubica mi vivienda"  = "No posee agua, consume agua externa",
"A través de un pozo" = "Agua de pozo",
"Conexión a un tanque comunitario" = "Tanque comunitario"),
TipoConexionElectrica = recode(TipoConexionElectrica, "Conexión a través de un medidor a la red eléctrica" = "Con medidor en red",
"Conexión sin medidor a una red eléctrica (“informal”)" = "Sin medidor, informalmente",
"Conexión a través de un medidor comunitario a la red eléctrica" = "Con medidor comunitario",
"No posee conexión a la red eléctrica en la vivienda" = "No tiene acceso a la red eléctrica")
)
table(datos_base)
datos_base
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...25", "...26", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"AguaPotable", # Cualitativa Nominal
"PresionAgua", # Cualitativa Ordinal
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica" # Cualitativa Nominal
)
datos <- data.frame(datos)
datos_base <- datos |>
mutate(
AguaPotable = ifelse(AguaPotable == 'No' & !is.na(PoseeGasNaturalParaCocina), 'Si', 'No'),
PoseeGasNaturalParaCocina = ifelse(PoseeGasNaturalParaCocina == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCocina), 1, 0),
PoseeGarrafaParaCocina = ifelse(PoseeGarrafaParaCocina == 'Gas natural (red de gas)'& !is.na(PoseeGarrafaParaCocina), 1, 0),
ElectricidadParaCocina = ifelse(ElectricidadParaCocina == 'Electricidad'& !is.na(ElectricidadParaCocina), 1, 0),
PoseeLeñaCarbonParaCocina = ifelse(PoseeLeñaCarbonParaCocina == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCocina), 1, 0),
NoTieneParaCocina = ifelse(NoTieneParaCocina == 'No tengo para cocinar en mi vivienda' & !is.na(NoTieneParaCocina), 1, 0),
PoseeGasNaturalParaCalefaccion = ifelse(PoseeGasNaturalParaCalefaccion == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCalefaccion), 1, 0),
PoseeGarrafaParaCalefaccion = ifelse(PoseeGarrafaParaCalefaccion == 'Gas envasado (garrafa)'& !is.na(PoseeGarrafaParaCalefaccion), 1, 0),
ElectricidadParaCalefaccion = ifelse(ElectricidadParaCalefaccion == 'Electricidad'& !is.na(ElectricidadParaCalefaccion), 1, 0),
PoseeLeñaCarbonParaCalefaccion = ifelse(PoseeLeñaCarbonParaCalefaccion == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCalefaccion), 1, 0),
NoTieneParaCalefaccion = ifelse(NoTieneParaCalefaccion == 'No tengo para calefaccionar mi vivienda' & !is.na(NoTieneParaCalefaccion), 1, 0),
NoNecesitaCalefaccionar = ifelse(NoNecesitaCalefaccionar == 'No necesito calefaccionar mi vivienda en ninguna época del año' & !is.na(NoNecesitaCalefaccionar), 1, 0),
# Recodifico las etiquetas de una variable categórica
FormaObtencionAgua = recode(FormaObtencionAgua, "No sabe" = "No sabe",
"A través de una conexión con medidor a la red pública" = "Con medidor en red",
"A través de una conexión sin medidor, es decir “informalmente”, sea a través de una conexión directa a la red pública o a través de una conexión indirecta a través de un vecinx “informalmente”" = "Sin medidor, informalmente",
"A través de un camión cisterna" = "Camión cisterna",
"No poseo agua dentro de la vivienda y/o tengo que acarrear desde fuera del terreno en que se ubica mi vivienda"  = "No posee agua, consume agua externa",
"A través de un pozo" = "Agua de pozo",
"Conexión a un tanque comunitario" = "Tanque comunitario"),
TipoConexionElectrica = recode(TipoConexionElectrica, "Conexión a través de un medidor a la red eléctrica" = "Con medidor en red",
"Conexión sin medidor a una red eléctrica (“informal”)" = "Sin medidor, informalmente",
"Conexión a través de un medidor comunitario a la red eléctrica" = "Con medidor comunitario",
"No posee conexión a la red eléctrica en la vivienda" = "No tiene acceso a la red eléctrica")
)
print(datos_base$Provincia)
table(datos_base$Provincia)
datos_base <- datos_base %>%
filter(Provincia == "CABA" | Provincia == "Mendoza" | Provincia == "Río Negro" | Provincia == "Santa Cruz" | Provincia == "Jujuy" | Provincia == "Córdoba")
table(datos_base$Provincia)
TiempoResidencia <- as.numeric(datos_base$TiempoDeResidenciaEnAños)
h2<-with(datosCompleto,graph.freq(as.numeric(TiempoResidencia),frequency=2, col="green", xlab="TiempoResidenciaEnA{os"))
TiempoResidencia <- as.numeric(datos_base$TiempoDeResidenciaEnAños)
h2<-with(datos_base,graph.freq(as.numeric(TiempoResidencia),frequency=2, col="green", xlab="TiempoResidenciaEnA{os"))
stem(datos_base$TiempoDeResidenciaEnAños)
hist(datos_base$TiempoDeResidenciaEnAños)
hist(datos_base$TiempoDeResidenciaEnAños)
stripchart(datos_base$TiempoDeResidenciaEnAños, method = "stack", pch = 16, col = "blue",
main = "Gráfico de Puntos", xlab = "Valores", ylab = "Frecuencia")
stripchart(datos_base$TiempoDeResidenciaEnAños, method = "stack", pch = 5, col = "blue",
main = "Gráfico de Puntos", xlab = "Valores", ylab = "Frecuencia")
stripchart(datos_base$TiempoDeResidenciaEnAños, method = "stack", pch = 20, col = "blue",
main = "Gráfico de Puntos", xlab = "Valores", ylab = "Frecuencia")
ggplot(data.frame(datos_base$TiempoDeResidenciaEnAños), aes(x = valores)) +
geom_dotplot(binwidth = 1, fill = "blue", color = "black") +
labs(title = "Gráfico de Puntos",
x = "Valores",
y = "Frecuencia") +
theme_minimal()
library(dplyr)
library(readxl)
library(ggplot2)
library(tidyr)
datos <- read_excel("/home/lsalvatore/Documents/FACULTAD/ProbabilidadYEstadistica/Prob_Datos_LP.xlsx", col_names = FALSE, skip=3)
datos <- datos |>
select(   # Seleccionar las columnas que quiero conservar
"...1", "...2","...5", "...24", "...25", "...26", "...38", "...39", "...40", "...41", "...42", "...43", "...44", "...45", "...46", "...47", "...48", "...50"
)
colnames(datos) <- c("OrdenInicial", # Cuantitativa Discreta
"Provincia", # Cualitativa Nominal
"TiempoDeResidenciaEnAños", # Cuantitativa Continua
"FormaObtencionAgua", # Cualitativa Nominal
"AguaPotable", # Cualitativa Nominal
"PresionAgua", # Cualitativa Ordinal
#TipoDeCalefaccion -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCocina", # Cualitativa Dicotómica
"PoseeGarrafaParaCocina", # Cualitativa Dicotómica
"ElectricidadParaCocina", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCocina",# Cualitativa Dicotómica
"NoTieneParaCocina",# Cualitativa Dicotómica
#TipoDeCocina -> Cualitativa de respuesta múltiple
"PoseeGasNaturalParaCalefaccion", # Cualitativa Dicotómica
"PoseeGarrafaParaCalefaccion", # Cualitativa Dicotómica
"ElectricidadParaCalefaccion", # Cualitativa Dicotómica
"PoseeLeñaCarbonParaCalefaccion",# Cualitativa Dicotómica
"NoTieneParaCalefaccion", # Cualitativa Dicotómica
"NoNecesitaCalefaccionar",# Cualitativa Dicotómica
"TipoConexionElectrica" # Cualitativa Nominal
)
datos <- data.frame(datos)
datos_base <- datos |>
mutate(
AguaPotable = ifelse(AguaPotable == 'No' & !is.na(PoseeGasNaturalParaCocina), 'Si', 'No'),
PoseeGasNaturalParaCocina = ifelse(PoseeGasNaturalParaCocina == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCocina), 1, 0),
PoseeGarrafaParaCocina = ifelse(PoseeGarrafaParaCocina == 'Gas natural (red de gas)'& !is.na(PoseeGarrafaParaCocina), 1, 0),
ElectricidadParaCocina = ifelse(ElectricidadParaCocina == 'Electricidad'& !is.na(ElectricidadParaCocina), 1, 0),
PoseeLeñaCarbonParaCocina = ifelse(PoseeLeñaCarbonParaCocina == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCocina), 1, 0),
NoTieneParaCocina = ifelse(NoTieneParaCocina == 'No tengo para cocinar en mi vivienda' & !is.na(NoTieneParaCocina), 1, 0),
PoseeGasNaturalParaCalefaccion = ifelse(PoseeGasNaturalParaCalefaccion == 'Gas natural (red de gas)' & !is.na(PoseeGasNaturalParaCalefaccion), 1, 0),
PoseeGarrafaParaCalefaccion = ifelse(PoseeGarrafaParaCalefaccion == 'Gas envasado (garrafa)'& !is.na(PoseeGarrafaParaCalefaccion), 1, 0),
ElectricidadParaCalefaccion = ifelse(ElectricidadParaCalefaccion == 'Electricidad'& !is.na(ElectricidadParaCalefaccion), 1, 0),
PoseeLeñaCarbonParaCalefaccion = ifelse(PoseeLeñaCarbonParaCalefaccion == 'Leña/Carbón' & !is.na(PoseeLeñaCarbonParaCalefaccion), 1, 0),
NoTieneParaCalefaccion = ifelse(NoTieneParaCalefaccion == 'No tengo para calefaccionar mi vivienda' & !is.na(NoTieneParaCalefaccion), 1, 0),
NoNecesitaCalefaccionar = ifelse(NoNecesitaCalefaccionar == 'No necesito calefaccionar mi vivienda en ninguna época del año' & !is.na(NoNecesitaCalefaccionar), 1, 0),
# Recodifico las etiquetas de una variable categórica
FormaObtencionAgua = recode(FormaObtencionAgua, "No sabe" = "No sabe",
"A través de una conexión con medidor a la red pública" = "Con medidor en red",
"A través de una conexión sin medidor, es decir “informalmente”, sea a través de una conexión directa a la red pública o a través de una conexión indirecta a través de un vecinx “informalmente”" = "Sin medidor, informalmente",
"A través de un camión cisterna" = "Camión cisterna",
"No poseo agua dentro de la vivienda y/o tengo que acarrear desde fuera del terreno en que se ubica mi vivienda"  = "No posee agua, consume agua externa",
"A través de un pozo" = "Agua de pozo",
"Conexión a un tanque comunitario" = "Tanque comunitario"),
TipoConexionElectrica = recode(TipoConexionElectrica, "Conexión a través de un medidor a la red eléctrica" = "Con medidor en red",
"Conexión sin medidor a una red eléctrica (“informal”)" = "Sin medidor, informalmente",
"Conexión a través de un medidor comunitario a la red eléctrica" = "Con medidor comunitario",
"No posee conexión a la red eléctrica en la vivienda" = "No tiene acceso a la red eléctrica")
)
datos_base <- datos_base %>%
filter(Provincia == "CABA" | Provincia == "Mendoza" | Provincia == "Río Negro" | Provincia == "Santa Cruz" | Provincia == "Jujuy" | Provincia == "Córdoba")
#Tiempo de residencia en años
ggplot(data.frame(datos_base$TiempoDeResidenciaEnAños), aes(x = valores)) +
geom_dotplot(binwidth = 1, fill = "blue", color = "black") +
labs(title = "Gráfico de Puntos",
x = "Valores",
y = "Frecuencia") +
theme_minimal()
ggplot(data.frame(datos_base$TiempoDeResidenciaEnAños), aes(x = datos_base$TiempoDeResidenciaEnAños)) +
geom_dotplot(binwidth = 1, fill = "blue", color = "black") +
labs(title = "Gráfico de Puntos",
x = "Valores",
y = "Frecuencia") +
theme_minimal()
